ALGORITHM function called insertionSort
VAR
arr, testArray = ARRAY_OF INTEGER[];
i , j, a = INTEGER

BEGIN
//calling the function insertionSort
 function insertionSort(testArray) 
  let arr = testArray;
    // Loop through the arr
    FOR (let i = 1; i < arr.length; i++) DO
    //The variable j is changing his value.
    let j = i - 1;

     WHILE (arr[i] > arr[j]) DO
     // if the value of arr[i] is bigger than arr[j], we need to switch the two. To do the switch we need an empty variable to store the value of arr[i]
        let a = 0
        a = arr[i];
        arr[i] = arr[j];
        arr[j] = a;
    // i and j are decrementing after the switch, so we can check the other position.     
        i--;
        j--;
//we are done if the condition of the while is not true anymore
     END WHILE
    END FOR
    //return the value arr
    return arr
  END function
// give the testArray a value and get the value of arr by calling the function
    testArray := [2, 9, 3, 6, 4, 7]
    arr := dot_product(arrayV1, arrayV2)
    INITIALIZE("give the testArray a value")
    READ(function insertionSort())
END
// Output the final arr value
WRITE(arr)